package com.lonch.client.databases;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.lonch.client.database.bean.AccelerationOrderEntity;
import com.lonch.client.database.bean.ApiResponseEntity;
import com.lonch.client.database.bean.BridgeEntity;
import com.lonch.client.database.bean.ConversationListEntity;
import com.lonch.client.database.bean.InfoFriendsEntity;
import com.lonch.client.database.bean.InfoUserEntity;
import com.lonch.client.database.bean.LocalZipEntity;
import com.lonch.client.database.bean.LogEntity;
import com.lonch.client.database.bean.MsgGroupsEntity;
import com.lonch.client.database.bean.MsgPersonalEntity;
import com.lonch.client.database.bean.NetLinkEntity;
import com.lonch.client.database.bean.SmallVideoEntity;
import com.lonch.client.database.bean.WebSocketEntity;
import com.lonch.client.database.bean.WebVersionEntity;

import com.lonch.client.databases.AccelerationOrderEntityDao;
import com.lonch.client.databases.ApiResponseEntityDao;
import com.lonch.client.databases.BridgeEntityDao;
import com.lonch.client.databases.ConversationListEntityDao;
import com.lonch.client.databases.InfoFriendsEntityDao;
import com.lonch.client.databases.InfoUserEntityDao;
import com.lonch.client.databases.LocalZipEntityDao;
import com.lonch.client.databases.LogEntityDao;
import com.lonch.client.databases.MsgGroupsEntityDao;
import com.lonch.client.databases.MsgPersonalEntityDao;
import com.lonch.client.databases.NetLinkEntityDao;
import com.lonch.client.databases.SmallVideoEntityDao;
import com.lonch.client.databases.WebSocketEntityDao;
import com.lonch.client.databases.WebVersionEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accelerationOrderEntityDaoConfig;
    private final DaoConfig apiResponseEntityDaoConfig;
    private final DaoConfig bridgeEntityDaoConfig;
    private final DaoConfig conversationListEntityDaoConfig;
    private final DaoConfig infoFriendsEntityDaoConfig;
    private final DaoConfig infoUserEntityDaoConfig;
    private final DaoConfig localZipEntityDaoConfig;
    private final DaoConfig logEntityDaoConfig;
    private final DaoConfig msgGroupsEntityDaoConfig;
    private final DaoConfig msgPersonalEntityDaoConfig;
    private final DaoConfig netLinkEntityDaoConfig;
    private final DaoConfig smallVideoEntityDaoConfig;
    private final DaoConfig webSocketEntityDaoConfig;
    private final DaoConfig webVersionEntityDaoConfig;

    private final AccelerationOrderEntityDao accelerationOrderEntityDao;
    private final ApiResponseEntityDao apiResponseEntityDao;
    private final BridgeEntityDao bridgeEntityDao;
    private final ConversationListEntityDao conversationListEntityDao;
    private final InfoFriendsEntityDao infoFriendsEntityDao;
    private final InfoUserEntityDao infoUserEntityDao;
    private final LocalZipEntityDao localZipEntityDao;
    private final LogEntityDao logEntityDao;
    private final MsgGroupsEntityDao msgGroupsEntityDao;
    private final MsgPersonalEntityDao msgPersonalEntityDao;
    private final NetLinkEntityDao netLinkEntityDao;
    private final SmallVideoEntityDao smallVideoEntityDao;
    private final WebSocketEntityDao webSocketEntityDao;
    private final WebVersionEntityDao webVersionEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accelerationOrderEntityDaoConfig = daoConfigMap.get(AccelerationOrderEntityDao.class).clone();
        accelerationOrderEntityDaoConfig.initIdentityScope(type);

        apiResponseEntityDaoConfig = daoConfigMap.get(ApiResponseEntityDao.class).clone();
        apiResponseEntityDaoConfig.initIdentityScope(type);

        bridgeEntityDaoConfig = daoConfigMap.get(BridgeEntityDao.class).clone();
        bridgeEntityDaoConfig.initIdentityScope(type);

        conversationListEntityDaoConfig = daoConfigMap.get(ConversationListEntityDao.class).clone();
        conversationListEntityDaoConfig.initIdentityScope(type);

        infoFriendsEntityDaoConfig = daoConfigMap.get(InfoFriendsEntityDao.class).clone();
        infoFriendsEntityDaoConfig.initIdentityScope(type);

        infoUserEntityDaoConfig = daoConfigMap.get(InfoUserEntityDao.class).clone();
        infoUserEntityDaoConfig.initIdentityScope(type);

        localZipEntityDaoConfig = daoConfigMap.get(LocalZipEntityDao.class).clone();
        localZipEntityDaoConfig.initIdentityScope(type);

        logEntityDaoConfig = daoConfigMap.get(LogEntityDao.class).clone();
        logEntityDaoConfig.initIdentityScope(type);

        msgGroupsEntityDaoConfig = daoConfigMap.get(MsgGroupsEntityDao.class).clone();
        msgGroupsEntityDaoConfig.initIdentityScope(type);

        msgPersonalEntityDaoConfig = daoConfigMap.get(MsgPersonalEntityDao.class).clone();
        msgPersonalEntityDaoConfig.initIdentityScope(type);

        netLinkEntityDaoConfig = daoConfigMap.get(NetLinkEntityDao.class).clone();
        netLinkEntityDaoConfig.initIdentityScope(type);

        smallVideoEntityDaoConfig = daoConfigMap.get(SmallVideoEntityDao.class).clone();
        smallVideoEntityDaoConfig.initIdentityScope(type);

        webSocketEntityDaoConfig = daoConfigMap.get(WebSocketEntityDao.class).clone();
        webSocketEntityDaoConfig.initIdentityScope(type);

        webVersionEntityDaoConfig = daoConfigMap.get(WebVersionEntityDao.class).clone();
        webVersionEntityDaoConfig.initIdentityScope(type);

        accelerationOrderEntityDao = new AccelerationOrderEntityDao(accelerationOrderEntityDaoConfig, this);
        apiResponseEntityDao = new ApiResponseEntityDao(apiResponseEntityDaoConfig, this);
        bridgeEntityDao = new BridgeEntityDao(bridgeEntityDaoConfig, this);
        conversationListEntityDao = new ConversationListEntityDao(conversationListEntityDaoConfig, this);
        infoFriendsEntityDao = new InfoFriendsEntityDao(infoFriendsEntityDaoConfig, this);
        infoUserEntityDao = new InfoUserEntityDao(infoUserEntityDaoConfig, this);
        localZipEntityDao = new LocalZipEntityDao(localZipEntityDaoConfig, this);
        logEntityDao = new LogEntityDao(logEntityDaoConfig, this);
        msgGroupsEntityDao = new MsgGroupsEntityDao(msgGroupsEntityDaoConfig, this);
        msgPersonalEntityDao = new MsgPersonalEntityDao(msgPersonalEntityDaoConfig, this);
        netLinkEntityDao = new NetLinkEntityDao(netLinkEntityDaoConfig, this);
        smallVideoEntityDao = new SmallVideoEntityDao(smallVideoEntityDaoConfig, this);
        webSocketEntityDao = new WebSocketEntityDao(webSocketEntityDaoConfig, this);
        webVersionEntityDao = new WebVersionEntityDao(webVersionEntityDaoConfig, this);

        registerDao(AccelerationOrderEntity.class, accelerationOrderEntityDao);
        registerDao(ApiResponseEntity.class, apiResponseEntityDao);
        registerDao(BridgeEntity.class, bridgeEntityDao);
        registerDao(ConversationListEntity.class, conversationListEntityDao);
        registerDao(InfoFriendsEntity.class, infoFriendsEntityDao);
        registerDao(InfoUserEntity.class, infoUserEntityDao);
        registerDao(LocalZipEntity.class, localZipEntityDao);
        registerDao(LogEntity.class, logEntityDao);
        registerDao(MsgGroupsEntity.class, msgGroupsEntityDao);
        registerDao(MsgPersonalEntity.class, msgPersonalEntityDao);
        registerDao(NetLinkEntity.class, netLinkEntityDao);
        registerDao(SmallVideoEntity.class, smallVideoEntityDao);
        registerDao(WebSocketEntity.class, webSocketEntityDao);
        registerDao(WebVersionEntity.class, webVersionEntityDao);
    }
    
    public void clear() {
        accelerationOrderEntityDaoConfig.clearIdentityScope();
        apiResponseEntityDaoConfig.clearIdentityScope();
        bridgeEntityDaoConfig.clearIdentityScope();
        conversationListEntityDaoConfig.clearIdentityScope();
        infoFriendsEntityDaoConfig.clearIdentityScope();
        infoUserEntityDaoConfig.clearIdentityScope();
        localZipEntityDaoConfig.clearIdentityScope();
        logEntityDaoConfig.clearIdentityScope();
        msgGroupsEntityDaoConfig.clearIdentityScope();
        msgPersonalEntityDaoConfig.clearIdentityScope();
        netLinkEntityDaoConfig.clearIdentityScope();
        smallVideoEntityDaoConfig.clearIdentityScope();
        webSocketEntityDaoConfig.clearIdentityScope();
        webVersionEntityDaoConfig.clearIdentityScope();
    }

    public AccelerationOrderEntityDao getAccelerationOrderEntityDao() {
        return accelerationOrderEntityDao;
    }

    public ApiResponseEntityDao getApiResponseEntityDao() {
        return apiResponseEntityDao;
    }

    public BridgeEntityDao getBridgeEntityDao() {
        return bridgeEntityDao;
    }

    public ConversationListEntityDao getConversationListEntityDao() {
        return conversationListEntityDao;
    }

    public InfoFriendsEntityDao getInfoFriendsEntityDao() {
        return infoFriendsEntityDao;
    }

    public InfoUserEntityDao getInfoUserEntityDao() {
        return infoUserEntityDao;
    }

    public LocalZipEntityDao getLocalZipEntityDao() {
        return localZipEntityDao;
    }

    public LogEntityDao getLogEntityDao() {
        return logEntityDao;
    }

    public MsgGroupsEntityDao getMsgGroupsEntityDao() {
        return msgGroupsEntityDao;
    }

    public MsgPersonalEntityDao getMsgPersonalEntityDao() {
        return msgPersonalEntityDao;
    }

    public NetLinkEntityDao getNetLinkEntityDao() {
        return netLinkEntityDao;
    }

    public SmallVideoEntityDao getSmallVideoEntityDao() {
        return smallVideoEntityDao;
    }

    public WebSocketEntityDao getWebSocketEntityDao() {
        return webSocketEntityDao;
    }

    public WebVersionEntityDao getWebVersionEntityDao() {
        return webVersionEntityDao;
    }

}
